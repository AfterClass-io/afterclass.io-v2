name: Cypress Tests

on:
  push:
    branches:
      - "main"
    paths:
      - "**.js"
      - "**.ts"
      - "**.jsx"
      - "**.tsx"
      - "**/prisma/data/**.json"
      - "cypress/**"
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "**.js"
      - "**.ts"
      - "**.jsx"
      - "**.tsx"
      - "**/prisma/data/**.json"
      - "cypress/**"

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Bun dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "latest"

      - name: Install dependencies
        run: bun install

  start-services:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Setup Env
        run: |
          cp .env.example .env
          sed -i "s|NEXT_PUBLIC_SUPABASE_URL=.*|NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}|" .env
          sed -i "s|NEXT_PUBLIC_SUPABASE_ANON_KEY=.*|NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}|" .env

      - name: Start Docker Compose
        run: docker compose up -d

      - name: Wait for database to be ready
        run: |
          echo "Waiting for database to be ready..."
          until docker exec $(docker ps -qf "name=supabase-db") pg_isready -U postgres; do
            sleep 1
          done
          echo "Database is ready"

  prepare-db:
    runs-on: ubuntu-latest
    needs: start-services
    steps:
      - name: Load database
        run: bun run db:reset -f

  test:
    runs-on: ubuntu-latest
    needs: prepare-db
    steps:
      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          install-command: bun install
          build: bun run build
          start: bun run start
          browser: chrome
        env:
          # see: https://github.com/cypress-io/github-action/tree/v6/?tab=readme-ov-file#debugging
          DEBUG: "cypress:*"
          CYPRESS_TEST_EMAIL_V1_VALID: ${{ secrets.CYPRESS_TEST_EMAIL_V1_VALID }}
          CYPRESS_TEST_EMAIL_V2_VALID: ${{ secrets.CYPRESS_TEST_EMAIL_V2_VALID }}
          CYPRESS_TEST_PWD_VALID: ${{ secrets.CYPRESS_TEST_PWD_VALID }}
          AUTH_TRUST_HOST: true

      - name: Upload Cypress screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore

      - name: Upload Cypress videos
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore

  cleanup:
    runs-on: ubuntu-latest
    needs: [test]
    if: always()
    steps:
      - name: Stop Docker Compose
        run: docker compose down
